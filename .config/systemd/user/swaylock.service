[Unit]
Description=swaylock screenlocker on dbus lock event (using systemd-lock-handler)
# if swaylock exists cleanly, unlock this session
OnSuccess=unlock.target
# When lock.target is stopped, stop this too
PartOf=lock.target
# Delay lock.target until this service is ready
After=lock.target

[Service]
# systemd will consider this service started when swaylock forks
# which swaylock will only do after it has locked the screen
Type=forking
ExecStart=/usr/bin/bash -c 'lock_cmd="/usr/bin/swaylock -C /home/$USER/.config/swaylock/config"; lock_private_cmd="$lock_cmd-private"; if ! $(/home/$USER/.config/swaylock/is_private.sh); then $lock_private_cmd; elif $(/home/$USER/.config/swaylock/lock_with_grace.sh); then $lock_cmd --grace 15; else $lock_cmd; fi'
Restart=on-failure
RestartSec=0

[Install]
WantedBy=lock.target
